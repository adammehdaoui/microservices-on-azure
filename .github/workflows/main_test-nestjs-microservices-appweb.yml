name: Build and Deploy Node.js app to Azure Container Registry

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@main

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_1D7159E14FB247EEA10249DC53E92368 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_5FC6B3DF6F5B477BB8282EAE6FC53A5E }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_264E9065FA2D4A6D92740DB0AFB762BA }}

      - name: "Build and push image"
        uses: azure/docker-login@v1
        with:
          login-server: helloworldadammehdaoui.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:${{ github.sha }}
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:${{ github.sha }}

      - name: "Deploy to Azure Container Instances"
        uses: "azure/aci-deploy@v1"
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          dns-name-label: ${{ secrets.RESOURCE_GROUP }}${{ github.run_number }}
          image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:${{ github.sha }}
          registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          registry-username: ${{ secrets.REGISTRY_USERNAME }}
          registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          name: random_app
          location: "west europe"

      # - name: Set up Node.js
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: "14.x"

      # - name: Install dependencies for API Gateway
      #   run: cd api-gateway && npm install

      # - name: Build API Gateway
      #   run: cd api-gateway && npm run build

      # - name: Install dependencies for Microservice
      #   run: cd apps/hello-world-microservice && npm install

      # - name: Build Microservice
      #   run: cd apps/hello-world-microservice && npm run build

      # - name: Zip artifacts for deployment
      #   run: zip -r release.zip .

      # - name: Upload artifacts for deployment
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: node-app
      #     path: release.zip

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   environment:
  #     name: "Production"
  #     url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
  #   permissions:
  #     id-token: write #This is required for requesting the JWT

  #   steps:
  #     - name: Download artifact from build job
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: node-app

  #     - name: Unzip artifact for deployment
  #       run: unzip release.zip

  #     - name: Login to Azure
  #       uses: azure/login@v1
  #       with:
  #         client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_1D7159E14FB247EEA10249DC53E92368 }}
  #         tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_5FC6B3DF6F5B477BB8282EAE6FC53A5E }}
  #         subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_264E9065FA2D4A6D92740DB0AFB762BA }}

  #     - name: "Deploy to Azure Web App"
  #       id: deploy-to-webapp
  #       uses: azure/webapps-deploy@v2
  #       with:
  #         app-name: "test-nestjs-microservices-appweb"
  #         slot-name: "Production"
  #         package: .
